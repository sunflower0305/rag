# 千问RAG系统环境配置示例文件
# 复制此文件为 .env 并填入实际的配置值

# =============================================================================
# 阿里云DashScope API 配置（必需）
# =============================================================================
# 从 https://dashscope.console.aliyun.com/ 获取
DASHSCOPE_API_KEY=sk-1d1767a68c2e4de186136c8e2229791c

# =============================================================================
# GitHub OAuth 配置（可选，用于用户登录）
# =============================================================================
# 如果需要GitHub登录功能，请在GitHub创建OAuth App并填入以下信息
# 创建步骤：
# 1. 访问 https://github.com/settings/applications/new
# 2. 填写应用信息：
#    - Application name: 千问RAG系统
#    - Homepage URL: http://localhost:7860
#    - Authorization callback URL: http://localhost:7860/auth/callback
# 3. 创建后获取 Client ID 和 Client Secret

# GitHub OAuth App Client ID
GITHUB_CLIENT_ID=Ov23liS46MTXY318T8b4

# GitHub OAuth App Client Secret  
GITHUB_CLIENT_SECRET=40b7e78235de10fc856691d7fc702033d188154d

# =============================================================================
# JWT 配置（可选）
# =============================================================================
# JWT 密钥，用于用户会话管理（如果不设置将自动生成）
# 建议使用强密码，至少32位随机字符串
JWT_SECRET_KEY=your_super_secret_jwt_key_at_least_32_characters_long

# =============================================================================
# 应用配置（可选）
# =============================================================================
# Gradio应用端口（默认7860）
# PORT=7860

# 应用域名（用于OAuth回调，生产环境请修改）
# APP_DOMAIN=localhost:7860

# =============================================================================
# 数据库配置（可选）
# =============================================================================
# SQLite数据库文件路径（默认 sqlite/chat_history.db）
# DATABASE_PATH=sqlite/chat_history.db

# =============================================================================
# 使用说明
# =============================================================================
# 1. 必须配置 DASHSCOPE_API_KEY 才能使用基本功能
# 2. GitHub OAuth 配置是可选的，如果不配置则以匿名模式运行
# 3. 如果启用GitHub登录，所有用户数据将按用户隔离
# 4. JWT_SECRET_KEY 用于用户会话加密，建议在生产环境中设置
# 5. 配置完成后重启应用即可生效

# =============================================================================
# 生产环境注意事项
# =============================================================================
# 1. 确保 .env 文件不会被提交到代码仓库
# 2. 使用强密码和安全的回调URL
# 3. 考虑使用HTTPS（修改OAuth回调URL为https://your-domain.com/auth/callback）
# 4. 定期更换JWT密钥和API密钥
# 5. 监控OAuth应用的使用情况

# =============================================================================
# 故障排除
# =============================================================================
# 如果遇到问题，请检查：
# 1. API密钥是否正确且有效
# 2. GitHub OAuth App设置是否正确
# 3. 回调URL是否与实际运行地址匹配
# 4. 防火墙是否允许相应端口
# 5. 检查应用日志获取详细错误信息